{"version":3,"sources":["App.js","index.js"],"names":["parser","SQLParser","App","useState","sql","setSql","json","setJson","query","setMongoQuery","error","setError","convertSql","mongoQuery","parseSql","JSON","stringify","message","console","columns","getSelectedFeilds","table","getSelectedTable","Object","keys","length","useEffect","style","backgroundColor","title","href","target","rel","textDecoration","margin","padding","color","display","width","marginLeft","marginBottom","fontSize","borderColor","height","defaultLanguage","theme","defaultValue","value","onChange","onClick","boxShadow","borderRadius","paddingRight","textAlign","alignItems","paddingTop","Date","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f8ca2dd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Editor from \"@monaco-editor/react\";\n\nimport { SQLParser } from 'sql-in-mongodb';\n\nconst parser = new SQLParser();\n\nconst  App = () => {\n  const [sql, setSql] = useState('select * from t where (a = 1 and b = 2) or c = 3');\n  const [json, setJson] = useState('');\n  const [query, setMongoQuery] = useState('');\n  const [error, setError] = useState(null);\n\n  const onSourceChange = (sql) =>  {\n    setSql(sql);\n  }\n\n  const convertSql = () => {\n    let mongoQuery;\n    try {\n      mongoQuery = parser.parseSql(sql);\n      setJson(JSON.stringify(mongoQuery, null, 2));\n      setError(null);\n    } catch (error) {\n      setError('Invalid SQL');\n      setJson(error.message);\n      setMongoQuery(error.message);\n      console.error(error);\n    }\n    try {\n      const columns = parser.getSelectedFeilds(sql);\n      const table = parser.getSelectedTable(sql);\n      if (Object.keys(columns).length > 0) {\n        setMongoQuery(`db.${table}.find(${JSON.stringify(mongoQuery)}, ${JSON.stringify(columns)})`);\n      } else {\n        setMongoQuery(`db.${table}.find(${JSON.stringify(mongoQuery)})`);\n      }\n      setError(null);\n    } catch (error) {\n      setError('Invalid SQL');\n      setJson(error.message);\n      setMongoQuery(error.message);\n      console.error(error);\n    }\n  }\n\n  useEffect(() => {\n    convertSql();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div style={{ backgroundColor: '#272822'}}>\n      <div>\n        <a title=\"SQL-in-MongoDB on GitHub\" href=\"https://github.com/Ligengxin96/sql-in-mongodb\" target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: 'none'}}>\n          <h2 style={{ margin: '0 0 0rem 1rem', padding: '1rem 0 0 0' }}>\n            <span style={{ color: '#e6db74' }}>SQL-in-MongoDB</span>\n            <span style={{ color: '#ffffff'}}> Demo</span>\n          </h2>\n        </a>\n      </div>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '48vw', marginLeft: \"1rem\" }}>\n          <h4 style={{ backgroundColor: '#ec9652', marginBottom: '0' }}>\n            <span style={{ color: '#aa5714', padding: '8px', fontSize: '1.1rem' }}>\n              SQL Statement\n            </span>\n          </h4>\n          <div style={{ borderColor: '#ec9652' }}>\n            <Editor\n              height=\"36vh\"\n              defaultLanguage=\"sql\"\n              theme={'vs-dark'}\n              defaultValue={sql}\n              value={sql}\n              onChange={onSourceChange}\n            />\n          </div>\n          <h4 style={{ backgroundColor: error ? '#fca4c3' : '#daf6a1', marginBottom: '0' }}>\n            <span style={{ color: error ? '#CB0048' : '#557B0A', padding: '8px', fontSize: '1.1rem' }}>\n              {error ? error : 'Mongo Query'}\n            </span>\n          </h4>\n          <div>\n            <Editor\n              height=\"36vh\"\n              defaultLanguage=\"javascript\"\n              theme={'vs-dark'}\n              value={query}\n            />\n          </div>\n        </div>\n        <div style={{ padding: '10rem 1rem' }}>\n          <button onClick={convertSql} style={{ backgroundColor: '#08C988', boxShadow: '0 1px 2px 0', borderRadius: '4px', height: '3rem', width: '5rem' }}>\n            convert\n          </button>\n        </div>\n        <div style={{ width: '48vw', paddingRight: \"1.5rem\" }}>\n          <div>\n            <h4 style={{ backgroundColor: error ? '#fca4c3' : '#daf6a1', marginBottom: '0' }}>\n              <span style={{ color: error ? '#CB0048' : '#557B0A', padding: '8px', fontSize: '1.1rem' }}>\n                {error ? error : 'Mongo Query Condition'}\n              </span>\n            </h4>\n            <Editor\n              height=\"77vh\"\n              defaultLanguage=\"json\"\n              theme={'vs-dark'}\n              value={json}\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ textAlign: 'center', alignItems: 'center', color: '#e6db74', paddingTop: '2rem', height: '9.7vh' }}>\n        <a title=\"SQL-in-MongoDB on GitHub\" href=\"https://github.com/Ligengxin96/sql-in-mongodb\" target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: 'none'}}>\n          <h4 style={{ margin: '0', color: '#e6db74' }}>SQL-in-MongoDB</h4>\n        </a>\n        <h4 style={{ margin: '0' }}>Â© {`${new Date().getFullYear()} Ligengxin96@gmail.com`}</h4>\n      </div>  \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}