{"version":3,"sources":["App.js","index.js"],"names":["parser","SQLParser","App","useState","sql","setSql","json","setJson","query","setMongoQuery","error","setError","onSourceChange","convertSql","mongoQuery","parseSql","JSON","stringify","console","log","table","getSelectedTable","useEffect","style","backgroundColor","title","href","target","rel","textDecoration","margin","padding","color","display","width","marginLeft","marginBottom","fontSize","borderColor","height","defaultLanguage","theme","defaultValue","value","onChange","message","options","readOnly","onClick","boxShadow","borderRadius","paddingRight","textAlign","alignItems","paddingTop","ReactDOM","render","document","getElementById"],"mappings":"qLAKMA,EAAS,IAAIC,YAkHJC,EAhHF,WAAO,IAAD,EACKC,mBAAS,oDADd,mBACVC,EADU,KACLC,EADK,OAEOF,mBAAS,IAFhB,mBAEVG,EAFU,KAEJC,EAFI,OAGcJ,mBAAS,IAHvB,mBAGVK,EAHU,KAGHC,EAHG,OAISN,mBAAS,MAJlB,mBAIVO,EAJU,KAIHC,EAJG,KAMXC,EAAiB,SAACR,GACtBC,EAAOD,IAGHS,EAAa,WACjB,IAAIC,EACJ,IACEA,EAAad,EAAOe,SAASX,GAC7BG,EAAQS,KAAKC,UAAUH,EAAY,KAAM,IACzCH,EAAS,MACT,MAAOD,GACPC,EAASD,GACTQ,QAAQC,IAAIT,GAEd,IACE,IAAMU,EAAQpB,EAAOqB,iBAAiBjB,GACtCK,EAAc,MAAD,OAAOW,EAAP,iBAAqBJ,KAAKC,UAAUH,GAApC,MACbH,EAAS,MACT,MAAOD,GACPC,EAASD,GACTQ,QAAQC,IAAIT,KAShB,OALAY,qBAAU,WACRT,MAEC,IAGD,sBAAKU,MAAO,CAAEC,gBAAiB,WAA/B,UACE,8BACE,mBAAGC,MAAM,2BAA2BC,KAAK,gDAAgDC,OAAO,SAASC,IAAI,aAAaL,MAAO,CAAEM,eAAgB,QAAnJ,SACE,qBAAIN,MAAO,CAAEO,OAAQ,gBAAiBC,QAAS,cAA/C,UACE,sBAAMR,MAAO,CAAES,MAAO,WAAtB,4BACA,sBAAMT,MAAO,CAAES,MAAO,WAAtB,0BAIN,sBAAKT,MAAO,CAAEU,QAAS,QAAvB,UACE,sBAAKV,MAAO,CAAEW,MAAO,OAAQC,WAAY,QAAzC,UACE,oBAAIZ,MAAO,CAAEC,gBAAiB,UAAWY,aAAc,KAAvD,SACE,sBAAMb,MAAO,CAAES,MAAO,UAAWD,QAAS,MAAOM,SAAU,UAA3D,6BAIF,qBAAKd,MAAO,CAAEe,YAAa,WAA3B,SACE,cAAC,IAAD,CACEC,OAAO,OACPC,gBAAgB,MAChBC,MAAO,UACPC,aAActC,EACduC,MAAOvC,EACPwC,SAAUhC,MAGd,oBAAIW,MAAO,CAAEC,gBAAiBd,EAAQ,UAAY,UAAW0B,aAAc,KAA3E,SACE,sBAAMb,MAAO,CAAES,MAAOtB,EAAQ,UAAY,UAAWqB,QAAS,MAAOM,SAAU,UAA/E,SACG3B,EAAQA,EAAMmC,QAAU,kBAG7B,8BACE,cAAC,IAAD,CACEN,OAAO,OACPC,gBAAgB,aAChBC,MAAO,UACPK,QAAS,CACPC,UAAU,GAEZJ,MAAOnC,EACPoC,SAAUhC,SAIhB,qBAAKW,MAAO,CAAEQ,QAAS,cAAvB,SACE,wBAAQiB,QAASnC,EAAYU,MAAO,CAAEC,gBAAiB,UAAWyB,UAAW,cAAeC,aAAc,MAAOX,OAAQ,OAAQL,MAAO,QAAxI,uBAIF,qBAAKX,MAAO,CAAEW,MAAO,OAAQiB,aAAc,UAA3C,SACE,gCACE,oBAAI5B,MAAO,CAAEC,gBAAiBd,EAAQ,UAAY,UAAW0B,aAAc,KAA3E,SACE,sBAAMb,MAAO,CAAES,MAAOtB,EAAQ,UAAY,UAAWqB,QAAS,MAAOM,SAAU,UAA/E,SACG3B,EAAQA,EAAMmC,QAAU,4BAG7B,cAAC,IAAD,CACEN,OAAO,OACPC,gBAAgB,OAChBC,MAAO,UACPK,QAAS,CACPC,UAAU,GAEZJ,MAAOrC,YAKf,sBAAKiB,MAAO,CAAE6B,UAAW,SAAUC,WAAY,SAAUrB,MAAO,UAAWsB,WAAY,OAAQf,OAAQ,SAAvG,UACE,oBAAIhB,MAAO,CAAEO,OAAQ,KAArB,4BACA,oBAAIP,MAAO,CAAEO,OAAQ,KAArB,6CC7GRyB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.36898c77.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Editor from \"@monaco-editor/react\";\n\nimport { SQLParser } from 'sql-in-mongodb';\n\nconst parser = new SQLParser();\n\nconst  App = () => {\n  const [sql, setSql] = useState('select * from t where (a = 1 and b = 2) or c = 3');\n  const [json, setJson] = useState('');\n  const [query, setMongoQuery] = useState('');\n  const [error, setError] = useState(null);\n\n  const onSourceChange = (sql) =>  {\n    setSql(sql);\n  }\n\n  const convertSql = () => {\n    let mongoQuery;\n    try {\n      mongoQuery = parser.parseSql(sql);\n      setJson(JSON.stringify(mongoQuery, null, 2));\n      setError(null);\n    } catch (error) {\n      setError(error);\n      console.log(error);\n    }\n    try {\n      const table = parser.getSelectedTable(sql);\n      setMongoQuery(`db.${table}.find(${JSON.stringify(mongoQuery)})`);\n      setError(null);\n    } catch (error) {\n      setError(error);\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    convertSql();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div style={{ backgroundColor: '#272822'}}>\n      <div>\n        <a title=\"SQL-in-MongoDB on GitHub\" href=\"https://github.com/Ligengxin96/sql-in-mongodb\" target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: 'none'}}>\n          <h2 style={{ margin: '0 0 0rem 1rem', padding: '1rem 0 0 0' }}>\n            <span style={{ color: '#e6db74' }}>SQL-in-MongoDB</span>\n            <span style={{ color: '#ffffff'}}> Demo</span>\n          </h2>\n        </a>\n      </div>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '48vw', marginLeft: \"1rem\" }}>\n          <h4 style={{ backgroundColor: '#ec9652', marginBottom: '0' }}>\n            <span style={{ color: '#aa5714', padding: '8px', fontSize: '1.1rem' }}>\n              SQL Statement\n            </span>\n          </h4>\n          <div style={{ borderColor: '#ec9652' }}>\n            <Editor\n              height=\"36vh\"\n              defaultLanguage=\"sql\"\n              theme={'vs-dark'}\n              defaultValue={sql}\n              value={sql}\n              onChange={onSourceChange}\n            />\n          </div>\n          <h4 style={{ backgroundColor: error ? '#fca4c3' : '#daf6a1', marginBottom: '0' }}>\n            <span style={{ color: error ? '#CB0048' : '#557B0A', padding: '8px', fontSize: '1.1rem' }}>\n              {error ? error.message : 'Mongo Query'}\n            </span>\n          </h4>\n          <div>\n            <Editor\n              height=\"36vh\"\n              defaultLanguage=\"javascript\"\n              theme={'vs-dark'}\n              options={{\n                readOnly: true\n              }}\n              value={query}\n              onChange={onSourceChange}\n            />\n          </div>\n        </div>\n        <div style={{ padding: '10rem 1rem' }}>\n          <button onClick={convertSql} style={{ backgroundColor: '#08C988', boxShadow: '0 1px 2px 0', borderRadius: '4px', height: '3rem', width: '5rem' }}>\n            convert\n          </button>\n        </div>\n        <div style={{ width: '48vw', paddingRight: \"1.5rem\" }}>\n          <div>\n            <h4 style={{ backgroundColor: error ? '#fca4c3' : '#daf6a1', marginBottom: '0' }}>\n              <span style={{ color: error ? '#CB0048' : '#557B0A', padding: '8px', fontSize: '1.1rem' }}>\n                {error ? error.message : 'Mongo Query Condition'}\n              </span>\n            </h4>\n            <Editor\n              height=\"77vh\"\n              defaultLanguage=\"json\"\n              theme={'vs-dark'}\n              options={{\n                readOnly: true\n              }}\n              value={json}\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ textAlign: 'center', alignItems: 'center', color: '#e6db74', paddingTop: '2rem', height: '9.7vh' }}>\n        <h4 style={{ margin: '0' }}>SQL-in-MongoDB</h4>\n        <h4 style={{ margin: '0' }}>Â© Ligengxin@gmail.com</h4>\n      </div>  \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}